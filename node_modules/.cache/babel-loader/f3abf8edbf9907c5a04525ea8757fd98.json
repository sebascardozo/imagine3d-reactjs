{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiancardozo/Desktop/programacion/React JS/copia ultima/src/components/ItemDetailContainer/ItemDetailContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { products } from \"../datos/datos\";\nimport Loader from \"../loader/loader\";\nimport ItemDetail from \"../ ItemDetail\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst findItem = id => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const itemDet = id ? products.find(product => product.id === id) : products;\n      resolve(itemDet);\n    }, 2000);\n  });\n};\n\nfunction ItemDetailContainer(_ref) {\n  _s();\n\n  let {} = _ref;\n  const [product, setProduct] = useState([]);\n  const [loading, setLoading] = useState([true]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    findItem(id).then(resp => {\n      setProduct(resp);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(ItemDetail, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(ItemDetailContainer, \"dUwrGA/4Y6/7veKlt0ZoF97MdZU=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemDetailContainer;\nexport default ItemDetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailContainer\");","map":{"version":3,"sources":["/Users/sebastiancardozo/Desktop/programacion/React JS/copia ultima/src/components/ItemDetailContainer/ItemDetailContainer.jsx"],"names":["useEffect","useState","products","Loader","ItemDetail","useParams","findItem","id","Promise","resolve","setTimeout","itemDet","find","product","ItemDetailContainer","setProduct","loading","setLoading","then","resp","catch","err","console","log","finally"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,QAAQ,GAAIC,EAAD,IAAQ;AACvB,SAAO,IAAIC,OAAJ,CAAcC,OAAD,IAAY;AAC9BC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAMC,OAAO,GAAGJ,EAAE,GAAGL,QAAQ,CAACU,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACN,EAAR,KAAeA,EAAxC,CAAH,GAAiDL,QAAnE;AACAO,MAAAA,OAAO,CAAEE,OAAF,CAAP;AACH,KAHS,EAGR,IAHQ,CAAV;AAID,GALM,CAAP;AAMD,CAPD;;AAUA,SAASG,mBAAT,OAAiC;AAAA;;AAAA,MAAJ,EAAI;AAE/B,QAAM,CAACD,OAAD,EAAUE,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAK,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CAAC,IAAD,CAAD,CAArC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AAEAL,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,QAAQ,CAACC,EAAD,CAAR,CACCW,IADD,CACOC,IAAD,IAAS;AAACJ,MAAAA,UAAU,CAACI,IAAD,CAAV;AAAiB,KADjC,EAECC,KAFD,CAEQC,GAAD,IAAQ;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFjC,EAGCG,OAHD,CAGS,MAAMP,UAAU,CAAC,KAAD,CAHzB;AAID,GALQ,EAKP,EALO,CAAT;AAQA,sBACE;AAAA,cACCD,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA;AAFH,mBADF;AAMD;;GApBQC,mB;UAIMT,S;;;KAJNS,mB;AAsBT,eAAeA,mBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { products } from \"../datos/datos\"\nimport Loader from \"../loader/loader\";\nimport ItemDetail from \"../ ItemDetail\";\nimport { useParams } from \"react-router-dom\";\n\nconst findItem = (id) => {\n  return new Promise ((resolve) =>{\n    setTimeout(() => {\n        const itemDet = id ? products.find(product => product.id === id) : products\n        resolve (itemDet)\n    },2000);\n  });\n}\n\n\nfunction ItemDetailContainer({}) {\n\n  const [product, setProduct] = useState([]);\n  const[loading, setLoading] = useState([true]);\n  const {id} = useParams()\n\n  useEffect(() =>{\n    findItem(id)\n    .then((resp) =>{setProduct(resp)})\n    .catch((err) =>{console.log(err)})\n    .finally(() => setLoading(false))\n  },[])\n\n \n  return (\n    <>\n    {loading ? <Loader/>\n    : (<ItemDetail product={product}/>)}\n    </>\n  )\n}\n\nexport default ItemDetailContainer"]},"metadata":{},"sourceType":"module"}